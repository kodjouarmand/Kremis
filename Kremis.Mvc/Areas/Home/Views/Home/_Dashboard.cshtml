@model DashboardViewModel

<div class="row pt-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Nombre de lots disponibles
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.AvailableParcels.Results.Count.ToString("N0")
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-danger shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                            Nombre de factures impayées
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.UnpaidInvoices.Results.Count.ToString("N0")
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-danger shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                            Montant total des impayés
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.UnpaidInvoices.Results.Sum(u => u.RemainingAmountToPay).GetValueOrDefault().ToString("N0")
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pending Requests Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Nombre de client débiteurs
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.DebtorCustomers.Results.Count.ToString("N0")
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row pt-4">
    @if (Model.UnpaidInvoices.Results.Count != 0)
    {
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Factures impayées</h6>
                </div>
                <div class="card-body text-xs">
                    @await Html.PartialAsync("_UnpaidInvoices", Model.UnpaidInvoices)
                </div>
            </div>
        </div>
    }
    @if (Model.OverdueInvoices.Results.Count != 0)
    {
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Factures échues</h6>
                </div>
                <div class="card-body text-xs">
                    @await Html.PartialAsync("_OverdueInvoices", Model.OverdueInvoices)
                </div>
            </div>
        </div>
    }
    @if (Model.DebtorCustomers.Results.Count != 0)
    {
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Clients débiteurs</h6>
                </div>
                <div class="card-body text-xs">
                    @await Html.PartialAsync("_DebtorCustomers", Model.DebtorCustomers)
                </div>
            </div>
        </div>
    }
</div>